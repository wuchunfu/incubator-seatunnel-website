"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[30430],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return u}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,f=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(f,i(i({ref:t},s),{},{components:n})):a.createElement(f,i({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},13993:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},assets:function(){return s},toc:function(){return m},default:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={},c="Intro to schema feature",p={unversionedId:"concept/schema-feature",id:"concept/schema-feature",title:"Intro to schema feature",description:"Why we need schema",source:"@site/docs/concept/schema-feature.md",sourceDirName:"concept",slug:"/concept/schema-feature",permalink:"/zh-CN/docs/concept/schema-feature",editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/docs/concept/schema-feature.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Intro To Connector V2 Features",permalink:"/zh-CN/docs/concept/connector-v2-features"},next:{title:"Source",permalink:"/zh-CN/docs/category/source"}},s={},m=[{value:"Why we need schema",id:"why-we-need-schema",level:2},{value:"What type supported at now",id:"what-type-supported-at-now",level:2},{value:"How to use schema",id:"how-to-use-schema",level:2},{value:"When we should use it or not",id:"when-we-should-use-it-or-not",level:2}],d={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intro-to-schema-feature"},"Intro to schema feature"),(0,o.kt)("h2",{id:"why-we-need-schema"},"Why we need schema"),(0,o.kt)("p",null,"Some NoSQL databases or message queue are not strongly limited schema, so the schema cannot be obtained through the api. At this time, a schema needs to be defined to convert to SeaTunnelRowType and obtain data."),(0,o.kt)("h2",{id:"what-type-supported-at-now"},"What type supported at now"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Data type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"string"),(0,o.kt)("td",{parentName:"tr",align:"left"},"string")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,o.kt)("td",{parentName:"tr",align:"left"},"boolean")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"tinyint"),(0,o.kt)("td",{parentName:"tr",align:"left"},"-128 to 127 regular. 0 to 255 unsigned*. Specify the maximum number of digits in parentheses.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"smallint"),(0,o.kt)("td",{parentName:"tr",align:"left"},"-32768 to 32767 General. 0 to 65535 unsigned*. Specify the maximum number of digits in parentheses.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"int"),(0,o.kt)("td",{parentName:"tr",align:"left"},"All numbers from -2,147,483,648 to 2,147,483,647 are allowed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"bigint"),(0,o.kt)("td",{parentName:"tr",align:"left"},"All numbers between -9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 are allowed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"float"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Float-precision numeric data from -1.79E+308 to 1.79E+308.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"double"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Double precision floating point. Handle most decimals.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"decimal"),(0,o.kt)("td",{parentName:"tr",align:"left"},"DOUBLE type stored as a string, allowing a fixed decimal point.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"null"),(0,o.kt)("td",{parentName:"tr",align:"left"},"null")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,o.kt)("td",{parentName:"tr",align:"left"},"bytes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"date"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Only the date is stored. From January 1, 0001 to December 31, 9999.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"time"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Only store time. Accuracy is 100 nanoseconds.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"timestamp"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Stores a unique number that is updated whenever a row is created or modified. timestamp is based on the internal clock and does not correspond to real time. There can only be one timestamp variable per table.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"row"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Row type,can be nested.")))),(0,o.kt)("h2",{id:"how-to-use-schema"},"How to use schema"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"schema")," defines the format of the data,it contains",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," properties. ",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," define the field properties,it's a K-V key-value pair, the Key is the field name and the value is field type. Here is an example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'source {\n  FakeSource {\n    parallelism = 2\n    result_table_name = "fake"\n    row.num = 16\n    schema = {\n      fields {\n        id = bigint\n        c_map = "map<string, smallint>"\n        c_array = "array<tinyint>"\n        c_string = string\n        c_boolean = boolean\n        c_tinyint = tinyint\n        c_smallint = smallint\n        c_int = int\n        c_bigint = bigint\n        c_float = float\n        c_double = double\n        c_decimal = "decimal(2, 1)"\n        c_bytes = bytes\n        c_date = date\n        c_timestamp = timestamp\n      }\n    }\n  }\n}\n')),(0,o.kt)("h2",{id:"when-we-should-use-it-or-not"},"When we should use it or not"),(0,o.kt)("p",null,"If there is a ",(0,o.kt)("inlineCode",{parentName:"p"},"schema")," configuration project in Options,the connector can then customize the schema. Like ",(0,o.kt)("inlineCode",{parentName:"p"},"Fake")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Pulsar")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Http")," source connector etc."))}u.isMDXComponent=!0}}]);