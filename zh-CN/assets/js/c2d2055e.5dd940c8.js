"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[47183],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return v}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(t),v=r,h=d["".concat(u,".").concat(v)]||d[v]||s[v]||i;return t?a.createElement(h,l(l({ref:n},c),{},{components:t})):a.createElement(h,l({ref:n},c))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6874:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return p},assets:function(){return c},toc:function(){return s},default:function(){return v}});var a=t(87462),r=t(63366),i=(t(67294),t(3905)),l=["components"],o={},u="Event Listener",p={unversionedId:"concept/event-listener",id:"concept/event-listener",title:"Event Listener",description:"Introduction",source:"@site/docs/concept/event-listener.md",sourceDirName:"concept",slug:"/concept/event-listener",permalink:"/zh-CN/docs/concept/event-listener",editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/docs/concept/event-listener.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Speed Control",permalink:"/zh-CN/docs/concept/speed-limit"},next:{title:"Connector Release Status",permalink:"/zh-CN/docs/Connector-v2-release-state"}},c={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Support Those Engines",id:"support-those-engines",level:2},{value:"API",id:"api",level:2},{value:"Event Data API",id:"event-data-api",level:3},{value:"Event Listener API",id:"event-listener-api",level:3},{value:"Event Collect API",id:"event-collect-api",level:3},{value:"Configuration Listener",id:"configuration-listener",level:2},{value:"Zeta Engine",id:"zeta-engine",level:3},{value:"Flink Engine",id:"flink-engine",level:3},{value:"Spark Engine",id:"spark-engine",level:3}],d={toc:s};function v(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"event-listener"},"Event Listener"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The SeaTunnel provides a rich event listening feature that allows you to manage the status at which data is synchronized.\nThis functionality is crucial when you need to listen job running status(",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.seatunnel.api.event"),").\nThis document will guide you through the usage of these parameters and how to leverage them effectively."),(0,i.kt)("h2",{id:"support-those-engines"},"Support Those Engines"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"SeaTunnel Zeta",(0,i.kt)("br",null),"\nFlink",(0,i.kt)("br",null),"\nSpark",(0,i.kt)("br",null))),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("p",null,"The event API is defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.seatunnel.api.event")," package."),(0,i.kt)("h3",{id:"event-data-api"},"Event Data API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.apache.seatunnel.api.event.Event")," - The interface for event data."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.apache.seatunnel.api.event.EventType")," - The enum for event type.")),(0,i.kt)("h3",{id:"event-listener-api"},"Event Listener API"),(0,i.kt)("p",null,"You can customize event handler, such as sending events to external systems"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.apache.seatunnel.api.event.EventHandler")," - The interface for event handler, SPI will automatically load subclass from the classpath.")),(0,i.kt)("h3",{id:"event-collect-api"},"Event Collect API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.apache.seatunnel.api.source.SourceSplitEnumerator")," - Attached event listener API to report events from ",(0,i.kt)("inlineCode",{parentName:"li"},"SourceSplitEnumerator"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"package org.apache.seatunnel.api.source;\n\npublic interface SourceSplitEnumerator {\n\n    interface Context {\n\n        /**\n         * Get the {@link org.apache.seatunnel.api.event.EventListener} of this enumerator.\n         *\n         * @return\n         */\n        EventListener getEventListener();\n    }\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.apache.seatunnel.api.source.SourceReader")," - Attached event listener API to report events from ",(0,i.kt)("inlineCode",{parentName:"li"},"SourceReader"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"package org.apache.seatunnel.api.source;\n\npublic interface SourceReader {\n\n    interface Context {\n\n        /**\n         * Get the {@link org.apache.seatunnel.api.event.EventListener} of this reader.\n         *\n         * @return\n         */\n        EventListener getEventListener();\n    }\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.apache.seatunnel.api.sink.SinkWriter")," - Attached event listener API to report events from ",(0,i.kt)("inlineCode",{parentName:"li"},"SinkWriter"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"package org.apache.seatunnel.api.sink;\n\npublic interface SinkWriter {\n\n    interface Context {\n\n        /**\n         * Get the {@link org.apache.seatunnel.api.event.EventListener} of this writer.\n         *\n         * @return\n         */\n        EventListener getEventListener();\n    }\n}\n")),(0,i.kt)("h2",{id:"configuration-listener"},"Configuration Listener"),(0,i.kt)("p",null,"To use the event listening feature, you need to configure engine config."),(0,i.kt)("h3",{id:"zeta-engine"},"Zeta Engine"),(0,i.kt)("p",null,"Example config in your config file(seatunnel.yaml):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'seatunnel:\n  engine:\n    event-report-http:\n      url: "http://example.com:1024/event/report"\n      headers:\n        Content-Type: application/json\n')),(0,i.kt)("h3",{id:"flink-engine"},"Flink Engine"),(0,i.kt)("p",null,"You can define the implementation class of ",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.seatunnel.api.event.EventHandler")," interface and add to the classpath to automatically load it through SPI."),(0,i.kt)("p",null,"Support flink version: 1.14.0+"),(0,i.kt)("p",null,"Example: ",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.seatunnel.api.event.LoggingEventHandler")),(0,i.kt)("h3",{id:"spark-engine"},"Spark Engine"),(0,i.kt)("p",null,"You can define the implementation class of ",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.seatunnel.api.event.EventHandler")," interface and add to the classpath to automatically load it through SPI."))}v.isMDXComponent=!0}}]);