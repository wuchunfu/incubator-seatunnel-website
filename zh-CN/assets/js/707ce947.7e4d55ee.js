"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[73380],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(t),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return t?a.createElement(f,l(l({ref:n},u),{},{components:t})):a.createElement(f,l({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},82626:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return u},toc:function(){return p},default:function(){return d}});var a=t(87462),r=t(63366),i=(t(67294),t(3905)),l=["components"],o={},s="SQL Configuration File",c={unversionedId:"concept/sql-config",id:"concept/sql-config",title:"SQL Configuration File",description:"Structure of SQL Configuration File",source:"@site/docs/concept/sql-config.md",sourceDirName:"concept",slug:"/concept/sql-config",permalink:"/zh-CN/docs/concept/sql-config",editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/docs/concept/sql-config.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Job Env Config",permalink:"/zh-CN/docs/concept/JobEnvConfig"},next:{title:"Speed Control",permalink:"/zh-CN/docs/concept/speed-limit"}},u={},p=[{value:"Structure of SQL Configuration File",id:"structure-of-sql-configuration-file",level:2},{value:"SQL",id:"sql",level:3},{value:"Explanation of <code>SQL</code> Configuration File",id:"explanation-of-sql-configuration-file",level:2},{value:"General Configuration in SQL File",id:"general-configuration-in-sql-file",level:3},{value:"SOURCE SQL Syntax",id:"source-sql-syntax",level:3},{value:"SINK SQL Syntax",id:"sink-sql-syntax",level:3},{value:"INSERT INTO SELECT Syntax",id:"insert-into-select-syntax",level:3},{value:"INSERT INTO SELECT TABLE Syntax",id:"insert-into-select-table-syntax",level:3},{value:"CREATE TABLE AS Syntax",id:"create-table-as-syntax",level:3},{value:"Example of SQL Configuration File Submission",id:"example-of-sql-configuration-file-submission",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sql-configuration-file"},"SQL Configuration File"),(0,i.kt)("h2",{id:"structure-of-sql-configuration-file"},"Structure of SQL Configuration File"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SQL")," configuration file appears as follows."),(0,i.kt)("h3",{id:"sql"},"SQL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"/* config\nenv {\n  parallelism = 1\n  job.mode = \"BATCH\"\n}\n*/\n\nCREATE TABLE source_table WITH (\n  'connector'='jdbc',\n  'type'='source',\n  'url' = 'jdbc:mysql://localhost:3306/seatunnel',\n  'driver' = 'com.mysql.cj.jdbc.Driver',\n  'user' = 'root',\n  'password' = '123456',\n  'query' = 'select * from source',\n  'properties'= '{\n    useSSL = false,\n    rewriteBatchedStatements = true\n  }'\n);\n\nCREATE TABLE sink_table WITH (\n  'connector'='jdbc',\n  'type'='sink',\n  'url' = 'jdbc:mysql://localhost:3306/seatunnel',\n  'driver' = 'com.mysql.cj.jdbc.Driver',\n  'user' = 'root',\n  'password' = '123456',\n  'generate_sink_sql' = 'true',\n  'database' = 'seatunnel',\n  'table' = 'sink'\n);\n\nINSERT INTO sink_table SELECT id, name, age, email FROM source_table;\n")),(0,i.kt)("h2",{id:"explanation-of-sql-configuration-file"},"Explanation of ",(0,i.kt)("inlineCode",{parentName:"h2"},"SQL")," Configuration File"),(0,i.kt)("h3",{id:"general-configuration-in-sql-file"},"General Configuration in SQL File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},'/* config\nenv {\n  parallelism = 1\n  job.mode = "BATCH"\n}\n*/\n')),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"SQL")," file, common configuration sections are defined using ",(0,i.kt)("inlineCode",{parentName:"p"},"/* config */")," comments. Inside, common configurations like ",(0,i.kt)("inlineCode",{parentName:"p"},"env")," can be defined using ",(0,i.kt)("inlineCode",{parentName:"p"},"HOCON")," format."),(0,i.kt)("h3",{id:"source-sql-syntax"},"SOURCE SQL Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE source_table WITH (\n  'connector'='jdbc',\n  'type'='source',\n  'url' = 'jdbc:mysql://localhost:3306/seatunnel',\n  'driver' = 'com.mysql.cj.jdbc.Driver',\n  'user' = 'root',\n  'password' = '123456',\n  'query' = 'select * from source',\n  'properties' = '{\n    useSSL = false,\n    rewriteBatchedStatements = true\n  }'\n);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Using ",(0,i.kt)("inlineCode",{parentName:"li"},"CREATE TABLE ... WITH (...)")," syntax creates a mapping for the source table. The ",(0,i.kt)("inlineCode",{parentName:"li"},"TABLE")," name is the name of the source-mapped table, and the ",(0,i.kt)("inlineCode",{parentName:"li"},"WITH")," syntax contains source-related configuration parameters."),(0,i.kt)("li",{parentName:"ul"},"There are two fixed parameters in the WITH syntax: ",(0,i.kt)("inlineCode",{parentName:"li"},"connector")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"type"),", representing connector plugin name (such as ",(0,i.kt)("inlineCode",{parentName:"li"},"jdbc"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"FakeSource"),", etc.) and source type (fixed as ",(0,i.kt)("inlineCode",{parentName:"li"},"source"),"), respectively."),(0,i.kt)("li",{parentName:"ul"},"Other parameter names can reference relevant configuration parameters of the corresponding connector plugin, but the format needs to be changed to ",(0,i.kt)("inlineCode",{parentName:"li"},"'key' = 'value',"),"."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"'value'")," is a sub-configuration, you can directly use a string in ",(0,i.kt)("inlineCode",{parentName:"li"},"HOCON")," format. Note: if using a sub-configuration in ",(0,i.kt)("inlineCode",{parentName:"li"},"HOCON")," format, the internal property items must be separated by ",(0,i.kt)("inlineCode",{parentName:"li"},","),", like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"'properties' = '{\n  useSSL = false,\n  rewriteBatchedStatements = true\n}'\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If using ",(0,i.kt)("inlineCode",{parentName:"li"},"'")," within ",(0,i.kt)("inlineCode",{parentName:"li"},"'value'"),", it needs to be escaped with ",(0,i.kt)("inlineCode",{parentName:"li"},"''"),", like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"'query' = 'select * from source where name = ''Joy Ding'''\n")),(0,i.kt)("h3",{id:"sink-sql-syntax"},"SINK SQL Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE sink_table WITH (\n  'connector'='jdbc',\n  'type'='sink',\n  'url' = 'jdbc:mysql://localhost:3306/seatunnel',\n  'driver' = 'com.mysql.cj.jdbc.Driver',\n  'user' = 'root',\n  'password' = '123456',\n  'generate_sink_sql' = 'true',\n  'database' = 'seatunnel',\n  'table' = 'sink'\n);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Using ",(0,i.kt)("inlineCode",{parentName:"li"},"CREATE TABLE ... WITH (...)")," syntax creates a mapping for the target table. The ",(0,i.kt)("inlineCode",{parentName:"li"},"TABLE")," name is the name of the target-mapped table, and the ",(0,i.kt)("inlineCode",{parentName:"li"},"WITH")," syntax contains sink-related configuration parameters."),(0,i.kt)("li",{parentName:"ul"},"There are two fixed parameters in the ",(0,i.kt)("inlineCode",{parentName:"li"},"WITH")," syntax: ",(0,i.kt)("inlineCode",{parentName:"li"},"connector")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"type"),", representing connector plugin name (such as ",(0,i.kt)("inlineCode",{parentName:"li"},"jdbc"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"console"),", etc.) and target type (fixed as ",(0,i.kt)("inlineCode",{parentName:"li"},"sink"),"), respectively."),(0,i.kt)("li",{parentName:"ul"},"Other parameter names can reference relevant configuration parameters of the corresponding connector plugin, but the format needs to be changed to ",(0,i.kt)("inlineCode",{parentName:"li"},"'key' = 'value',"),".")),(0,i.kt)("h3",{id:"insert-into-select-syntax"},"INSERT INTO SELECT Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO sink_table SELECT id, name, age, email FROM source_table;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"SELECT FROM")," part is the table name of the source-mapped table."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT INTO")," part is the table name of the target-mapped table."),(0,i.kt)("li",{parentName:"ul"},"Note: This syntax does ",(0,i.kt)("strong",{parentName:"li"},"not support")," specifying fields in ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT"),", like this: ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT INTO sink_table (id, name, age, email) SELECT id, name, age, email FROM source_table;"))),(0,i.kt)("h3",{id:"insert-into-select-table-syntax"},"INSERT INTO SELECT TABLE Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO sink_table SELECT source_table;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"SELECT")," part directly uses the name of the source-mapped table, indicating that all data from the source table will be inserted into the target table."),(0,i.kt)("li",{parentName:"ul"},"Using this syntax does not generate related ",(0,i.kt)("inlineCode",{parentName:"li"},"transform")," configurations. This syntax is generally used in multi-table synchronization scenarios. For example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE source_table WITH (\n  'connector'='jdbc',\n  'type' = 'source',\n  'url' = 'jdbc:mysql://127.0.0.1:3306/seatunnel',\n  'driver' = 'com.mysql.cj.jdbc.Driver',\n  'user' = 'root',\n  'password' = '123456',\n  'table_list' = '[\n      {\n        table_path = \"source.table1\"\n      },\n      {\n        table_path = \"source.table2\",\n        query = \"select * from source.table2\"\n      }\n    ]'\n);\n\nCREATE TABLE sink_table WITH (\n  'connector'='jdbc',\n  'type' = 'sink',\n  'url' = 'jdbc:mysql://127.0.0.1:3306/seatunnel',\n  'driver' = 'com.mysql.cj.jdbc.Driver',\n  'user' = 'root',\n  'password' = '123456',\n  'generate_sink_sql' = 'true',\n  'database' = 'sink'\n);\n\nINSERT INTO sink_table SELECT source_table;\n")),(0,i.kt)("h3",{id:"create-table-as-syntax"},"CREATE TABLE AS Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE temp1 AS SELECT id, name, age, email FROM source_table;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This syntax creates a temporary table with the result of a ",(0,i.kt)("inlineCode",{parentName:"li"},"SELECT")," query, used for ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT INTO")," operations."),(0,i.kt)("li",{parentName:"ul"},"The syntax of the ",(0,i.kt)("inlineCode",{parentName:"li"},"SELECT")," part refers to: ",(0,i.kt)("a",{parentName:"li",href:"/zh-CN/docs/transform-v2/sql"},"SQL-transform")," ",(0,i.kt)("inlineCode",{parentName:"li"},"query")," configuration item")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE temp1 AS SELECT id, name, age, email FROM source_table;\n\nINSERT INTO sink_table SELECT * FROM temp1;\n")),(0,i.kt)("h2",{id:"example-of-sql-configuration-file-submission"},"Example of SQL Configuration File Submission"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/seatunnel.sh --config ./config/sample.sql\n")))}d.isMDXComponent=!0}}]);