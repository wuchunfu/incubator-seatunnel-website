"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[9018],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),k=i,f=u["".concat(p,".").concat(k)]||u[k]||m[k]||r;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58215:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(67294);function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:i},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(87462),i=n(67294),r=n(72389),l=n(65450),o=n(86010),p="tabItem_LplD";function d(e){var t,n,r,d=e.lazy,s=e.block,m=e.defaultValue,u=e.values,k=e.groupId,f=e.className,c=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=u?u:c.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),_=(0,l.lx)(N,(function(e,t){return e.value===t.value}));if(_.length>0)throw new Error('Docusaurus error: Duplicate values "'+_.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===m?m:null!=(t=null!=m?m:null==(n=c.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=c[0])?void 0:r.props.value;if(null!==g&&!N.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+N.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,l.UB)(),v=h.tabGroupChoices,b=h.setTabGroupChoices,y=(0,i.useState)(g),w=y[0],C=y[1],x=[],$=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var T=v[k];null!=T&&T!==w&&N.some((function(e){return e.value===T}))&&C(T)}var F=function(e){var t=e.currentTarget,n=x.indexOf(t),a=N[n].value;a!==w&&($(t),C(a),null!=k&&b(k,a))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=x.indexOf(e.currentTarget)+1;n=x[a]||x[0];break;case"ArrowLeft":var i=x.indexOf(e.currentTarget)-1;n=x[i]||x[x.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":s},f)},N.map((function(e){var t=e.value,n=e.label,r=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return x.push(e)},onKeyDown:O,onFocus:F,onClick:F},r,{className:(0,o.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),d?(0,i.cloneElement)(c.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},c.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function s(e){var t=(0,r.Z)();return i.createElement(d,(0,a.Z)({key:String(t)},e))}},70115:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return s},metadata:function(){return m},assets:function(){return u},toc:function(){return k},default:function(){return c}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),l=n(9877),o=n(58215),p=["components"],d={},s="File",m={unversionedId:"connector-v2/sink/File",id:"connector-v2/sink/File",title:"File",description:"Description",source:"@site/docs/connector-v2/sink/File.mdx",sourceDirName:"connector-v2/sink",slug:"/connector-v2/sink/File",permalink:"/docs/connector-v2/sink/File",editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/docs/connector-v2/sink/File.mdx",tags:[],version:"current",frontMatter:{}},u={},k=[{value:"Description",id:"description",level:2},{value:"Options",id:"options",level:2},{value:"path string",id:"path-string",level:3},{value:"file_name_expression string",id:"file_name_expression-string",level:3},{value:"file_format string",id:"file_format-string",level:3},{value:"filename_time_format string",id:"filename_time_format-string",level:3},{value:"field_delimiter string",id:"field_delimiter-string",level:3},{value:"row_delimiter string",id:"row_delimiter-string",level:3},{value:"partition_by array",id:"partition_by-array",level:3},{value:"partition_dir_expression string",id:"partition_dir_expression-string",level:3},{value:"is_partition_field_write_in_file boolean",id:"is_partition_field_write_in_file-boolean",level:3},{value:"sink_columns array",id:"sink_columns-array",level:3},{value:"is_enable_transaction boolean",id:"is_enable_transaction-boolean",level:3},{value:"save_mode string",id:"save_mode-string",level:3},{value:"path string",id:"path-string-1",level:3},{value:"file_name_expression string",id:"file_name_expression-string-1",level:3},{value:"file_format string",id:"file_format-string-1",level:3},{value:"filename_time_format string",id:"filename_time_format-string-1",level:3},{value:"field_delimiter string",id:"field_delimiter-string-1",level:3},{value:"row_delimiter string",id:"row_delimiter-string-1",level:3},{value:"partition_by array",id:"partition_by-array-1",level:3},{value:"partition_dir_expression string",id:"partition_dir_expression-string-1",level:3},{value:"is_partition_field_write_in_file boolean",id:"is_partition_field_write_in_file-boolean-1",level:3},{value:"sink_columns array",id:"sink_columns-array-1",level:3},{value:"is_enable_transaction boolean",id:"is_enable_transaction-boolean-1",level:3},{value:"save_mode string",id:"save_mode-string-1",level:3},{value:"Example",id:"example",level:2}],f={toc:k};function c(e){var t=e.components,n=(0,i.Z)(e,p);return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"file"},"File"),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"Output data to local or hdfs or s3 file."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Used to write data to file. Supports Batch and Streaming mode."),(0,r.kt)("ul",{parentName:"div",className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Batch"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Streaming")))),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)(l.Z,{groupId:"engine-type",defaultValue:"LocalFile",values:[{label:"LocalFile",value:"LocalFile"},{label:"HdfsFile",value:"HdfsFile"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"LocalFile",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file_name_expression"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"${transactionId}"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file_format"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"text"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filename_time_format"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"yyyy.MM.dd"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"field_delimiter"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"'\\001'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"row_delimiter"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"\\n"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"partition_by"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"partition_dir_expression"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"${k0}=${v0}/${k1}=${v1}/.../${kn}=${vn}/"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"is_partition_field_write_in_file"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink_columns"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"When this parameter is empty, all fields are sink columns")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"is_enable_transaction"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"save_mode"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"error"')))),(0,r.kt)("h3",{id:"path-string"},"path ","[string]"),(0,r.kt)("p",null,"The target dir path is required. The ",(0,r.kt)("inlineCode",{parentName:"p"},"hdfs file")," starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"hdfs://")," , and the ",(0,r.kt)("inlineCode",{parentName:"p"},"local file")," starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"file://"),","),(0,r.kt)("h3",{id:"file_name_expression-string"},"file_name_expression ","[string]"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"file_name_expression")," describes the file expression which will be created into the ",(0,r.kt)("inlineCode",{parentName:"p"},"path"),". We can add the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"${now}")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"${uuid}")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_name_expression"),", like ",(0,r.kt)("inlineCode",{parentName:"p"},"test_${uuid}_${now}"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"${now}")," represents the current time, and its format can be defined by specifying the option ",(0,r.kt)("inlineCode",{parentName:"p"},"filename_time_format"),"."),(0,r.kt)("p",null,"Please note that, If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_enable_transaction")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", we will auto add ",(0,r.kt)("inlineCode",{parentName:"p"},"${transactionId}_")," in the head of the file."),(0,r.kt)("h3",{id:"file_format-string"},"file_format ","[string]"),(0,r.kt)("p",null,"We supported ",(0,r.kt)("inlineCode",{parentName:"p"},"file_format")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"text"),"."),(0,r.kt)("p",null,"Please note that, The final file name will ends with the file_format's suffix, the suffix of the text file is ",(0,r.kt)("inlineCode",{parentName:"p"},"txt"),"."),(0,r.kt)("h3",{id:"filename_time_format-string"},"filename_time_format ","[string]"),(0,r.kt)("p",null,"When the format in the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_name_expression")," parameter is ",(0,r.kt)("inlineCode",{parentName:"p"},"xxxx-${now}")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"filename_time_format")," can specify the time format of the path, and the default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"yyyy.MM.dd")," . The commonly used time formats are listed as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Symbol"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"y"),(0,r.kt)("td",{parentName:"tr",align:null},"Year")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"M"),(0,r.kt)("td",{parentName:"tr",align:null},"Month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"d"),(0,r.kt)("td",{parentName:"tr",align:null},"Day of month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"H"),(0,r.kt)("td",{parentName:"tr",align:null},"Hour in day (0-23)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"m"),(0,r.kt)("td",{parentName:"tr",align:null},"Minute in hour")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"s"),(0,r.kt)("td",{parentName:"tr",align:null},"Second in minute")))),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html"},"Java SimpleDateFormat")," for detailed time format syntax."),(0,r.kt)("h3",{id:"field_delimiter-string"},"field_delimiter ","[string]"),(0,r.kt)("p",null,"The separator between columns in a row of data."),(0,r.kt)("h3",{id:"row_delimiter-string"},"row_delimiter ","[string]"),(0,r.kt)("p",null,"The separator between rows in a file."),(0,r.kt)("h3",{id:"partition_by-array"},"partition_by ","[array]"),(0,r.kt)("p",null,"Partition data based on selected fields"),(0,r.kt)("h3",{id:"partition_dir_expression-string"},"partition_dir_expression ","[string]"),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_by")," is specified, we will generate the corresponding partition directory based on the partition information, and the final file will be placed in the partition directory."),(0,r.kt)("p",null,"Default ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_dir_expression")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"${k0}=${v0}/${k1}=${v1}/.../${kn}=${vn}/"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"k0")," is the first partition field and ",(0,r.kt)("inlineCode",{parentName:"p"},"v0")," is the value of the first partition field."),(0,r.kt)("h3",{id:"is_partition_field_write_in_file-boolean"},"is_partition_field_write_in_file ","[boolean]"),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_partition_field_write_in_file")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the partition field and the value of it will be write into data file."),(0,r.kt)("p",null,"For example, if you want to write a Hive Data File, Its value should be ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h3",{id:"sink_columns-array"},"sink_columns ","[array]"),(0,r.kt)("p",null,"Which columns need be write to file, default value is all of the columns get from ",(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Source"),".\nThe order of the fields determines the order in which the file is actually written."),(0,r.kt)("h3",{id:"is_enable_transaction-boolean"},"is_enable_transaction ","[boolean]"),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_enable_transaction")," is true, we will ensure that data will not be lost or duplicated when it is written to the target directory."),(0,r.kt)("p",null,"Please note that, If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_enable_transaction")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", we will auto add ",(0,r.kt)("inlineCode",{parentName:"p"},"${transactionId}_")," in the head of the file."),(0,r.kt)("p",null,"Only support ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," now."),(0,r.kt)("h3",{id:"save_mode-string"},"save_mode ","[string]"),(0,r.kt)("p",null,"Storage mode, currently supports ",(0,r.kt)("inlineCode",{parentName:"p"},"overwrite")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"append")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"ignore")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," . For the specific meaning of each mode, see ",(0,r.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-programming-guide.html#save-modes"},"save-modes")),(0,r.kt)("p",null,"Streaming Job not support ",(0,r.kt)("inlineCode",{parentName:"p"},"overwrite"),".")),(0,r.kt)(o.Z,{value:"HdfsFile",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file_name_expression"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"${transactionId}"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file_format"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"text"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filename_time_format"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"yyyy.MM.dd"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"field_delimiter"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"'\\001'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"row_delimiter"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"\\n"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"partition_by"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"partition_dir_expression"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"${k0}=${v0}/${k1}=${v1}/.../${kn}=${vn}/"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"is_partition_field_write_in_file"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink_columns"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"When this parameter is empty, all fields are sink columns")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"is_enable_transaction"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"save_mode"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},'"error"')))),(0,r.kt)("h3",{id:"path-string-1"},"path ","[string]"),(0,r.kt)("p",null,"The target dir path is required. The ",(0,r.kt)("inlineCode",{parentName:"p"},"hdfs file")," starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"hdfs://")," , and the ",(0,r.kt)("inlineCode",{parentName:"p"},"local file")," starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"file://"),","),(0,r.kt)("h3",{id:"file_name_expression-string-1"},"file_name_expression ","[string]"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"file_name_expression")," describes the file expression which will be created into the ",(0,r.kt)("inlineCode",{parentName:"p"},"path"),". We can add the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"${now}")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"${uuid}")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_name_expression"),", like ",(0,r.kt)("inlineCode",{parentName:"p"},"test_${uuid}_${now}"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"${now}")," represents the current time, and its format can be defined by specifying the option ",(0,r.kt)("inlineCode",{parentName:"p"},"filename_time_format"),"."),(0,r.kt)("p",null,"Please note that, If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_enable_transaction")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", we will auto add ",(0,r.kt)("inlineCode",{parentName:"p"},"${transactionId}_")," in the head of the file."),(0,r.kt)("h3",{id:"file_format-string-1"},"file_format ","[string]"),(0,r.kt)("p",null,"We supported ",(0,r.kt)("inlineCode",{parentName:"p"},"file_format")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"text"),"."),(0,r.kt)("p",null,"Please note that, The final file name will ends with the file_format's suffix, the suffix of the text file is ",(0,r.kt)("inlineCode",{parentName:"p"},"txt"),"."),(0,r.kt)("h3",{id:"filename_time_format-string-1"},"filename_time_format ","[string]"),(0,r.kt)("p",null,"When the format in the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_name_expression")," parameter is ",(0,r.kt)("inlineCode",{parentName:"p"},"xxxx-${now}")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"filename_time_format")," can specify the time format of the path, and the default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"yyyy.MM.dd")," . The commonly used time formats are listed as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Symbol"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"y"),(0,r.kt)("td",{parentName:"tr",align:null},"Year")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"M"),(0,r.kt)("td",{parentName:"tr",align:null},"Month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"d"),(0,r.kt)("td",{parentName:"tr",align:null},"Day of month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"H"),(0,r.kt)("td",{parentName:"tr",align:null},"Hour in day (0-23)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"m"),(0,r.kt)("td",{parentName:"tr",align:null},"Minute in hour")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"s"),(0,r.kt)("td",{parentName:"tr",align:null},"Second in minute")))),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html"},"Java SimpleDateFormat")," for detailed time format syntax."),(0,r.kt)("h3",{id:"field_delimiter-string-1"},"field_delimiter ","[string]"),(0,r.kt)("p",null,"The separator between columns in a row of data."),(0,r.kt)("h3",{id:"row_delimiter-string-1"},"row_delimiter ","[string]"),(0,r.kt)("p",null,"The separator between rows in a file."),(0,r.kt)("h3",{id:"partition_by-array-1"},"partition_by ","[array]"),(0,r.kt)("p",null,"Partition data based on selected fields"),(0,r.kt)("h3",{id:"partition_dir_expression-string-1"},"partition_dir_expression ","[string]"),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_by")," is specified, we will generate the corresponding partition directory based on the partition information, and the final file will be placed in the partition directory."),(0,r.kt)("p",null,"Default ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_dir_expression")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"${k0}=${v0}/${k1}=${v1}/.../${kn}=${vn}/"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"k0")," is the first partition field and ",(0,r.kt)("inlineCode",{parentName:"p"},"v0")," is the value of the first partition field."),(0,r.kt)("h3",{id:"is_partition_field_write_in_file-boolean-1"},"is_partition_field_write_in_file ","[boolean]"),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_partition_field_write_in_file")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the partition field and the value of it will be write into data file."),(0,r.kt)("p",null,"For example, if you want to write a Hive Data File, Its value should be ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h3",{id:"sink_columns-array-1"},"sink_columns ","[array]"),(0,r.kt)("p",null,"Which columns need be write to file, default value is all of the columns get from ",(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Source"),".\nThe order of the fields determines the order in which the file is actually written."),(0,r.kt)("h3",{id:"is_enable_transaction-boolean-1"},"is_enable_transaction ","[boolean]"),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_enable_transaction")," is true, we will ensure that data will not be lost or duplicated when it is written to the target directory."),(0,r.kt)("p",null,"Please note that, If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_enable_transaction")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", we will auto add ",(0,r.kt)("inlineCode",{parentName:"p"},"${transactionId}_")," in the head of the file."),(0,r.kt)("p",null,"Only support ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," now."),(0,r.kt)("h3",{id:"save_mode-string-1"},"save_mode ","[string]"),(0,r.kt)("p",null,"Storage mode, currently supports ",(0,r.kt)("inlineCode",{parentName:"p"},"overwrite")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"append")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"ignore")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," . For the specific meaning of each mode, see ",(0,r.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-programming-guide.html#save-modes"},"save-modes")),(0,r.kt)("p",null,"Streaming Job not support ",(0,r.kt)("inlineCode",{parentName:"p"},"overwrite"),"."))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)(l.Z,{groupId:"engine-type",defaultValue:"LocalFile",values:[{label:"LocalFile",value:"LocalFile"},{label:"HdfsFile",value:"HdfsFile"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"LocalFile",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\nLocalFile {\n    path="file:///tmp/hive/warehouse/test2"\n    field_delimiter="\\t"\n    row_delimiter="\\n"\n    partition_by=["age"]\n    partition_dir_expression="${k0}=${v0}"\n    is_partition_field_write_in_file=true\n    file_name_expression="${transactionId}_${now}"\n    file_format="text"\n    sink_columns=["name","age"]\n    filename_time_format="yyyy.MM.dd"\n    is_enable_transaction=true\n    save_mode="error"\n}\n\n'))),(0,r.kt)(o.Z,{value:"LocalFile",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\nHdfsFile {\n    path="file:///tmp/hive/warehouse/test2"\n    field_delimiter="\\t"\n    row_delimiter="\\n"\n    partition_by=["age"]\n    partition_dir_expression="${k0}=${v0}"\n    is_partition_field_write_in_file=true\n    file_name_expression="${transactionId}_${now}"\n    file_format="text"\n    sink_columns=["name","age"]\n    filename_time_format="yyyy.MM.dd"\n    is_enable_transaction=true\n    save_mode="error"\n}\n\n')))))}c.isMDXComponent=!0}}]);