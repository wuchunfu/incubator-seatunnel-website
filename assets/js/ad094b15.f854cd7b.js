"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[4780],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return k}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),s=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=s(t),k=r,d=m["".concat(i,".").concat(k)]||m[k]||p[k]||l;return t?a.createElement(d,o(o({ref:n},c),{},{components:t})):a.createElement(d,o({ref:n},c))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u.mdxType="string"==typeof e?e:r,o[1]=u;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},58215:function(e,n,t){t.d(n,{Z:function(){return r}});var a=t(67294);function r(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return c}});var a=t(87462),r=t(67294),l=t(72389),o=t(65450),u=t(86010),i="tabItem_LplD";function s(e){var n,t,l,s=e.lazy,c=e.block,p=e.defaultValue,m=e.values,k=e.groupId,d=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),h=(0,o.lx)(b,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===p?p:null!=(n=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(l=f[0])?void 0:l.props.value;if(null!==g&&!b.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,o.UB)(),N=v.tabGroupChoices,y=v.setTabGroupChoices,w=(0,r.useState)(g),T=w[0],S=w[1],E=[],O=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var x=N[k];null!=x&&x!==T&&b.some((function(e){return e.value===x}))&&S(x)}var I=function(e){var n=e.currentTarget,t=E.indexOf(n),a=b[t].value;a!==T&&(O(n),S(a),null!=k&&y(k,a))},C=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=E.indexOf(e.currentTarget)+1;t=E[a]||E[0];break;case"ArrowLeft":var r=E.indexOf(e.currentTarget)-1;t=E[r]||E[E.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},d)},b.map((function(e){var n=e.value,t=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:function(e){return E.push(e)},onKeyDown:C,onFocus:I,onClick:I},l,{className:(0,u.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),s?(0,r.cloneElement)(f.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function c(e){var n=(0,l.Z)();return r.createElement(s,(0,a.Z)({key:String(n)},e))}},28952:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},assets:function(){return m},toc:function(){return k},default:function(){return f}});var a=t(87462),r=t(63366),l=(t(67294),t(3905)),o=t(9877),u=t(58215),i=["components"],s={sidebar_position:4},c="Set Up with Kubernetes",p={unversionedId:"start-v2/kubernetes/kubernetes",id:"start-v2/kubernetes/kubernetes",title:"Set Up with Kubernetes",description:"This section provides a quick guide to using SeaTunnel with Kubernetes.",source:"@site/docs/start-v2/kubernetes/kubernetes.mdx",sourceDirName:"start-v2/kubernetes",slug:"/start-v2/kubernetes/",permalink:"/docs/start-v2/kubernetes/",editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/docs/start-v2/kubernetes/kubernetes.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docs",previous:{title:"docker",permalink:"/docs/start-v2/docker/"},next:{title:"config",permalink:"/docs/concept/config"}},m={},k=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"SeaTunnel docker image",id:"seatunnel-docker-image",level:3},{value:"Deploying the operator",id:"deploying-the-operator",level:3},{value:"Run SeaTunnel Application",id:"run-seatunnel-application",level:2},{value:"What&#39;s More",id:"whats-more",level:2}],d={toc:k};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"set-up-with-kubernetes"},"Set Up with Kubernetes"),(0,l.kt)("p",null,"This section provides a quick guide to using SeaTunnel with Kubernetes."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"We assume that you have a local installations of the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.docker.com/"},"docker")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://kubernetes.io/"},"kubernetes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://helm.sh/docs/intro/quickstart/"},"helm"))),(0,l.kt)("p",null,"So that the ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"helm")," commands are available on your local system."),(0,l.kt)("p",null,"For kubernetes ",(0,l.kt)("a",{parentName:"p",href:"https://minikube.sigs.k8s.io/docs/start/"},"minikube")," is our choice, at the time of writing this we are using version v1.23.3. You can start a cluster with the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"minikube start --kubernetes-version=v1.23.3\n")),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("h3",{id:"seatunnel-docker-image"},"SeaTunnel docker image"),(0,l.kt)("p",null,"To run the image with SeaTunnel, first create a ",(0,l.kt)("inlineCode",{parentName:"p"},"Dockerfile"),":"),(0,l.kt)(o.Z,{groupId:"engine-type",defaultValue:"flink",values:[{label:"Flink",value:"flink"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"flink",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'FROM flink:1.13\n\nENV SEATUNNEL_VERSION="2.3.0"\nENV SEATUNNEL_HOME = "/opt/seatunnel"\n\nRUN mkdir -p $SEATUNNEL_HOME\n\nRUN wget https://archive.apache.org/dist/seatunnel/${SEATUNNEL_VERSION}/apache-seatunnel-incubating-${SEATUNNEL_VERSION}-bin.tar.gz\nRUN tar -xzvf apache-seatunnel-incubating-${SEATUNNEL_VERSION}-bin.tar.gz\n\nRUN cp -r apache-seatunnel-incubating-${SEATUNNEL_VERSION}/* $SEATUNNEL_HOME/\nRUN rm -rf apache-seatunnel-incubating-${SEATUNNEL_VERSION}*\n')),(0,l.kt)("p",null,"Then run the following commands to build the image:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t seatunnel:2.3.0-flink-1.13 -f Dockerfile .\n")),(0,l.kt)("p",null,"Image ",(0,l.kt)("inlineCode",{parentName:"p"},"seatunnel:2.3.0-flink-1.13")," need to be present in the host (minikube) so that the deployment can take place."),(0,l.kt)("p",null,"Load image to minikube via:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"minikube image load seatunnel:2.3.0-flink-1.13\n")))),(0,l.kt)("h3",{id:"deploying-the-operator"},"Deploying the operator"),(0,l.kt)(o.Z,{groupId:"engine-type",defaultValue:"flink",values:[{label:"Flink",value:"flink"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"flink",mdxType:"TabItem"},(0,l.kt)("p",null,"The steps below provide a quick walk-through on setting up the Flink Kubernetes Operator.\nYou can refer to ",(0,l.kt)("a",{parentName:"p",href:"https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-main/docs/try-flink-kubernetes-operator/quick-start/"},"Flink Kubernetes Operator - Quick Start")," for more details."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Notice: All the Kubernetes resources bellow are created in default namespace.")),(0,l.kt)("p",null,"Install the certificate manager on your Kubernetes cluster to enable adding the webhook component (only needed once per Kubernetes cluster):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f https://github.com/jetstack/cert-manager/releases/download/v1.8.2/cert-manager.yaml\n")),(0,l.kt)("p",null,"Now you can deploy the latest stable Flink Kubernetes Operator version using the included Helm chart:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add flink-operator-repo https://downloads.apache.org/flink/flink-kubernetes-operator-1.3.1/\n\nhelm install flink-kubernetes-operator flink-operator-repo/flink-kubernetes-operator \\\n--set image.repository=apache/flink-kubernetes-operator\n")),(0,l.kt)("p",null,"You may verify your installation via ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods\nNAME                                                   READY   STATUS    RESTARTS      AGE\nflink-kubernetes-operator-5f466b8549-mgchb             1/1     Running   3 (23h ago)   16d\n\n")))),(0,l.kt)("h2",{id:"run-seatunnel-application"},"Run SeaTunnel Application"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Run Application:"),": SeaTunnel already providers out-of-the-box ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/seatunnel/tree/dev/config"},"configurations"),"."),(0,l.kt)(o.Z,{groupId:"engine-type",defaultValue:"flink",values:[{label:"Flink",value:"flink"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"flink",mdxType:"TabItem"},(0,l.kt)("p",null,"In this guide we are going to use ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/apache/seatunnel/blob/2.3.0-release/config/v2.streaming.conf.template"},"seatunnel.streaming.conf"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},'env {\n  execution.parallelism = 1\n  job.mode = "STREAMING"\n  checkpoint.interval = 2000\n}\n\nsource {\n    FakeSource {\n      result_table_name = "fake"\n      row.num = 160000\n      schema = {\n        fields {\n          name = "string"\n          age = "int"\n        }\n      }\n    }\n}\n\ntransform {\n  FieldMapper {\n    source_table_name = "fake"\n    result_table_name = "fake1"\n    field_mapper = {\n      age = age\n      name = new_name\n    }\n  }\n}\n\nsink {\n  Console {\n    source_table_name = "fake1"\n  }\n}\n')),(0,l.kt)("p",null,"Generate a configmap named seatunnel-config in Kubernetes for the seatunnel.streaming.conf so that we can mount the config content in pod."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create cm seatunnel-config \\\n--from-file=seatunnel.streaming.conf=seatunnel.streaming.conf\n")),(0,l.kt)("p",null,"Once the Flink Kubernetes Operator is running as seen in the previous steps you are ready to submit a Flink (SeaTunnel) job:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Create ",(0,l.kt)("inlineCode",{parentName:"li"},"seatunnel-flink.yaml")," FlinkDeployment manifest:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: flink.apache.org/v1beta1\nkind: FlinkDeployment\nmetadata:\n  name: seatunnel-flink-streaming-example\nspec:\n  image: seatunnel:2.3.0-flink-1.13\n  flinkVersion: v1_13\n  flinkConfiguration:\n    taskmanager.numberOfTaskSlots: "2"\n  serviceAccount: flink\n  jobManager:\n    replicas: 1\n    resource:\n      memory: "1024m"\n      cpu: 1\n  taskManager:\n    resource:\n      memory: "1024m"\n      cpu: 1\n  podTemplate:\n    spec:\n      containers:\n        - name: flink-main-container\n          volumeMounts:\n            - name: seatunnel-config\n              mountPath: /data/seatunnel.streaming.conf\n              subPath: seatunnel.streaming.conf\n      volumes:\n        - name: seatunnel-config\n          configMap:\n            name: seatunnel-config\n            items:\n            - key: seatunnel.streaming.conf\n              path: seatunnel.streaming.conf\n  job:\n    jarURI: local:///opt/seatunnel/starter/seatunnel-flink-starter.jar\n    entryClass: org.apache.seatunnel.core.starter.flink.SeaTunnelFlink\n    args: ["--config", "/data/seatunnel.streaming.conf"]\n    parallelism: 2\n    upgradeMode: stateless\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Run the example application:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f seatunnel-flink.yaml\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"See The Output")),(0,l.kt)(o.Z,{groupId:"engine-type",defaultValue:"flink",values:[{label:"Flink",value:"flink"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"flink",mdxType:"TabItem"},(0,l.kt)("p",null,"You may follow the logs of your job, after a successful startup (which can take on the order of a minute in a fresh environment, seconds afterwards) you can:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs -f deploy/seatunnel-flink-streaming-example\n")),(0,l.kt)("p",null,"looks like the below:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"...\n2023-01-31 12:13:54,349 INFO  org.apache.flink.runtime.executiongraph.ExecutionGraph       [] - Source: SeaTunnel FakeSource -> Sink Writer: Console (1/1) (1665d2d011b2f6cf6525c0e5e75ec251) switched from SCHEDULED to DEPLOYING.\n2023-01-31 12:13:56,684 INFO  org.apache.flink.runtime.executiongraph.ExecutionGraph       [] - Deploying Source: SeaTunnel FakeSource -> Sink Writer: Console (1/1) (attempt #0) with attempt id 1665d2d011b2f6cf6525c0e5e75ec251 to seatunnel-flink-streaming-example-taskmanager-1-1 @ 100.103.244.106 (dataPort=39137) with allocation id fbe162650c4126649afcdaff00e46875\n2023-01-31 12:13:57,794 INFO  org.apache.flink.runtime.executiongraph.ExecutionGraph       [] - Source: SeaTunnel FakeSource -> Sink Writer: Console (1/1) (1665d2d011b2f6cf6525c0e5e75ec251) switched from DEPLOYING to INITIALIZING.\n2023-01-31 12:13:58,203 INFO  org.apache.flink.runtime.executiongraph.ExecutionGraph       [] - Source: SeaTunnel FakeSource -> Sink Writer: Console (1/1) (1665d2d011b2f6cf6525c0e5e75ec251) switched from INITIALIZING to RUNNING.\n")),(0,l.kt)("p",null,"If OOM error accur in the log, you can decrease the ",(0,l.kt)("inlineCode",{parentName:"p"},"row.num")," value in seatunnel.streaming.conf"),(0,l.kt)("p",null,"To expose the Flink Dashboard you may add a port-forward rule:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl port-forward svc/seatunnel-flink-streaming-example-rest 8081\n")),(0,l.kt)("p",null,"Now the Flink Dashboard is accessible at ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:8081"},"localhost:8081"),"."),(0,l.kt)("p",null,"Or launch ",(0,l.kt)("inlineCode",{parentName:"p"},"minikube dashboard")," for a web-based Kubernetes user interface."),(0,l.kt)("p",null,"The content printed in the TaskManager Stdout log:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs \\\n-l 'app in (seatunnel-flink-streaming-example), component in (taskmanager)' \\\n--tail=-1 \\\n-f\n")),(0,l.kt)("p",null,"looks like the below (your content may be different since we use ",(0,l.kt)("inlineCode",{parentName:"p"},"FakeSource")," to automatically generate random stream data):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"...\nsubtaskIndex=0: row=159991 : VVgpp, 978840000\nsubtaskIndex=0: row=159992 : JxrOC, 1493825495\nsubtaskIndex=0: row=159993 : YmCZR, 654146216\nsubtaskIndex=0: row=159994 : LdmUn, 643140261\nsubtaskIndex=0: row=159995 : tURkE, 837012821\nsubtaskIndex=0: row=159996 : uPDfd, 2021489045\nsubtaskIndex=0: row=159997 : mjrdG, 2074957853\nsubtaskIndex=0: row=159998 : xbeUi, 864518418\nsubtaskIndex=0: row=159999 : sSWLb, 1924451911\nsubtaskIndex=0: row=160000 : AuPlM, 1255017876\n")),(0,l.kt)("p",null,"To stop your job and delete your FlinkDeployment you can simply:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -f seatunnel-flink.yaml\n")))),(0,l.kt)("p",null,"Happy SeaTunneling!"),(0,l.kt)("h2",{id:"whats-more"},"What's More"),(0,l.kt)("p",null,"For now, you are already taking a quick look at SeaTunnel, you could see ",(0,l.kt)("a",{parentName:"p",href:"/category/connector"},"connector")," to find all source and sink SeaTunnel supported.\nOr see ",(0,l.kt)("a",{parentName:"p",href:"../deployment.mdx"},"deployment")," if you want to submit your application in another kind of your engine cluster."))}f.isMDXComponent=!0}}]);